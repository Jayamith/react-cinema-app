# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
orbs:
  slack: circleci/slack@4.4.4
version: 2.1
executors:
  app-executor:
    docker:
      - image: cimg/node:16.13.0
    working_directory: ~/repo
  slack-executor:
    docker:
      - image: 'cibuilds/base:latest'
    resource_class: small

aliases:
  - &show-current-branch-name
    run:
      name: Show current branch
      command: echo ${CIRCLE_BRANCH}
  - &restore-cache
    restore_cache:
      keys:
        - app-{{ checksum "package.json" }}
        - app-
  - &install-dependencies
    run:
      name: Install dependencies
      command: npm install
  - &save-cache
    save_cache:
      paths:
        - node_modules
      key: app-{{ checksum "package.json" }}
  - &install-aws-cli
    run:
      name: Installing AWS CLI
      working_directory: /
      command:
        sudo apt-get update -y;
        sudo apt-get install -y awscli;
        sudo apt-get install -y python3-pip python-dev build-essential;
  - &build-project
    run:
      name: Build Project
      command:
        npm install;
        npm run build;
        cd build;
        zip ../build.zip -r * .[^.]*;
        echo "Build Successful";

jobs:
  build:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *restore-cache
      - *install-dependencies
      - *save-cache

  deploy-to-aws-s3:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *install-aws-cli
      - *build-project
      - run:
          name: Deploy to AWS S3
          command:
            if [ "${CIRCLE_BRANCH}" == "master" ];
            then
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_PRODUCTION_BUCKET} --delete;
            elif [ "${CIRCLE_BRANCH}" == "staging" ];
            then
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_STAGING_BUCKET} --delete;
            else
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_DEV_BUCKET} --delete;
            fi;

  deploy-to-aws-cloudfront:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *install-aws-cli
      - *build-project
      - run:
          name: Deploy to AWS Cloudfront
          command: aws cloudfront create-invalidation --distribution-id ${DEV_DISTRIBUTION_ID} --paths /\*

  notify-via-slack:
    executor: slack-executor
    steps:
      - slack/notify:
          message: "${CIRCLE_BRANCH} branch deployment to aws s3 and cloudfront is completed."
          webhook: $CIRCLECI_SLACK_WEBHOOK
      - slack/status:
          webhook: $CIRCLECI_SLACK_WEBHOOK

workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy-to-aws-s3:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - staging
                - master
      - deploy-to-aws-cloudfront:
          requires:
            - deploy-to-aws-s3
          filters:
            branches:
              only:
                - develop
                - staging
                - master
      - notify-via-slack:
          requires:
            - deploy-to-aws-cloudfront
          filters:
            branches:
              only:
                - develop
                - staging
                - master
